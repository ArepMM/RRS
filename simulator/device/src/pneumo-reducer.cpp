#include    "pneumo-reducer.h"

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
PneumoReducer::PneumoReducer(double ref_pressure, QObject *parent) : BrakeDevice(parent)
  , V0(1.0e-3)
  , pREF(ref_pressure)
  , pIN(0.0)
  , QOUT(0.0)
  , QIN(0.0)
  , kv(1.0)
  , Kflow(1e-2)
{

}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
PneumoReducer::~PneumoReducer()
{

}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoReducer::setRefPressure(double value)
{
    pREF = value;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoReducer::setInputPressure(double value)
{
    pIN = value;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
double PneumoReducer::getInputFlow() const
{
    return QIN;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoReducer::setOutFlow(double value)
{
    QOUT = value;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
double PneumoReducer::getOutPressure() const
{
    return getY(0);
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoReducer::preStep(state_vector_t &Y, double t)
{
    Q_UNUSED(t)

    // Клапан наполнения рабочей полости
    double v = cut(kv * (pREF - Y[0]), 0.0, Kflow);

    // Поток наполнения рабочей полости
    QIN = v * (pIN - Y[0]);
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoReducer::ode_system(const state_vector_t &Y,
                               state_vector_t &dYdt,
                               double t)
{
    Q_UNUSED(Y)
    Q_UNUSED(t)

    dYdt[0] = (QIN + QOUT) / V0;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoReducer::load_config(CfgReader &cfg)
{
    QString secName = "Device";

    double tmp = 0.0;
    cfg.getDouble(secName, "V0", tmp);
    if (tmp > 1e-3)
        V0 = tmp;

    cfg.getDouble(secName, "pREF", pREF);
    cfg.getDouble(secName, "kv", kv);
    cfg.getDouble(secName, "Kflow", Kflow);
}
