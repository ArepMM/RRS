#include    "pneumo-relay.h"

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
PneumoRelay::PneumoRelay(double work_volume, QObject *parent) : BrakeDevice(parent)
  , V0(work_volume)
  , pCONTROL(0.0)
  , pFL(0.0)
  , pPIPE(0.0)
  , QCONTROL(0.0)
  , QFL(0.0)
  , QPIPE(0.0)
  , K1(0.0)
  , K2(0.0)
  , k1(1.0)
{

}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
PneumoRelay::~PneumoRelay()
{

}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoRelay::setControlPressure(double value)
{
    pCONTROL = value;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoRelay::setControlFlow(double value)
{
    QCONTROL = value;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
double PneumoRelay::getControlPressure() const
{
    return getY(0);
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoRelay::setFLpressure(double value)
{
    pFL = value;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
double PneumoRelay::getFLflow() const
{
    return QFL;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoRelay::setPipePressure(double value)
{
    pPIPE = value;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
double PneumoRelay::getPipeFlow() const
{
    return QPIPE;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoRelay::ode_system(const state_vector_t &Y,
                             state_vector_t &dYdt,
                             double t)
{
    Q_UNUSED(Y)
    Q_UNUSED(t)

    // Проверям, задавалось ли давление в камере напрямую
    if (pCONTROL != 0.0)
    {
        setY(0, pCONTROL);
        pCONTROL = 0.0;
        QCONTROL = 0.0;
    }

    dYdt[0] = QCONTROL / V0;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoRelay::preStep(state_vector_t &Y, double t)
{
    Q_UNUSED(t)

    double s1 = cut(k1 * (Y[0] - pPIPE), -1.0, 1.0);

    // Поток из питательной магистрали в управляемую
    double Q_fl_pipe = K1 * (pFL - pPIPE) * hs_p(s1);

    // Разрядка управляемой магистрали в атмосферу
    double Q_pipe_atm = K2 * pPIPE * hs_n(s1);

    // Поток в питательную магистраль
    QFL = - Q_fl_pipe;

    // Поток в управляемую магистраль
    QPIPE = Q_fl_pipe - Q_pipe_atm;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void PneumoRelay::load_config(CfgReader &cfg)
{
    QString secName = "Device";

    double tmp = 0.0;
    cfg.getDouble(secName, "V0", tmp);
    if (tmp > 1e-3)
        V0 = tmp;

    cfg.getDouble(secName, "K1", K1);
    cfg.getDouble(secName, "K2", K2);
    cfg.getDouble(secName, "k1", k1);
}
