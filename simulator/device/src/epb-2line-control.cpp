#include    "epb-2line-control.h"

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
EPBControl::EPBControl(QObject *parent) : Device(parent)
  , U(0.0)
  , f(625.0)
  , is_hold(false)
  , is_brake(false)
  , work_U(0.0)
  , work_f(0.0)
  , control_U(0.0)
  , control_f(0.0)
  , lampRelease(false)
  , lampHold(false)
  , lampBrake(false)
{

}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
EPBControl::~EPBControl()
{

}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void EPBControl::setInputVoltage(double value)
{
    U = value;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void EPBControl::setInputFrequency(double value)
{
    f = value;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void EPBControl::setHoldState(bool state)
{
    is_hold = state;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void EPBControl::setBrakeState(bool state)
{
    is_brake = state;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
double EPBControl::getWorkVoltage() const
{
    return work_U;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
double EPBControl::getWorkFrequency() const
{
    return work_f;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void EPBControl::setControlVoltage(double value)
{
    control_U = value;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void EPBControl::setControlFrequency(double value)
{
    control_f = value;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
bool EPBControl::stateReleaseLamp() const
{
    return lampRelease;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
bool EPBControl::stateHoldLamp() const
{
    return lampHold;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
bool EPBControl::stateBrakeLamp() const
{
    return lampBrake;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void EPBControl::step(double t, double dt)
{
    Q_UNUSED(t)
    Q_UNUSED(dt)

    // Наличие питания
    bool is_powered = (U > 0.8 * 50.0);

    if (!is_powered)
    {
        lampRelease = false;
        lampHold = false;
        lampBrake = false;

        work_U = 0.0;
        work_f = 0.0;

        return;
    }

    // Лампы включаются от реле, запитанного от контрольной цепи
    bool control_relay = (abs(control_U) > 0.8 * 50.0);
    lampRelease = control_relay;
    lampHold = is_hold && control_relay;
    lampBrake = is_brake && control_relay;

    // Перекрыша - отрицательный постоянный ток в линии управления ЭПТ
    if (is_hold)
    {
        work_U = -U;
        work_f = 0.0;
        return;
    }

    // Торможение - положительный постоянный ток в линии управления ЭПТ
    if (is_brake)
    {
        work_U = U;
        work_f = 0.0;
        return;
    }

    // Отпуск - переменный ток в линии управления ЭПТ
    work_U = U;
    work_f = f;
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void EPBControl::ode_system(const state_vector_t &Y, state_vector_t &dYdt, double t)
{
    Q_UNUSED(Y)
    Q_UNUSED(dYdt)
    Q_UNUSED(t)
}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void EPBControl::load_config(CfgReader &cfg)
{
    Q_UNUSED(cfg)
}
