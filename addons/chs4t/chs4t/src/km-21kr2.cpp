//------------------------------------------------------------------------------
//
//      Магистральный пассажирский электровоз переменного тока ЧС4т.
//      Дополнение для Russian Railway Simulator (RRS)
//
//      (c) RRS development team:
//          Дмитрий Притыкин (maisvendoo),
//          Николай Авилкин (avilkin.nick)
//
//      Дата: 16/06/2019
//
//------------------------------------------------------------------------------

#include "km-21kr2.h"

//------------------------------------------------------------------------------
// Конструктор
//------------------------------------------------------------------------------
Km21KR2::Km21KR2(QObject* parent) : Device(parent)
  , k21(true)
  , k22(true)
  , k23(false)
{

}

//------------------------------------------------------------------------------
// Деструктор
//------------------------------------------------------------------------------
Km21KR2::~Km21KR2()
{

}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void Km21KR2::ode_system(const state_vector_t& Y, state_vector_t& dYdt, double t)
{

}

//------------------------------------------------------------------------------
// Загрузка данных из конфигурационного файла
//------------------------------------------------------------------------------
void Km21KR2::load_config(CfgReader& cfg)
{

}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void Km21KR2::preStep(state_vector_t& Y, double t)
{

}

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
void Km21KR2::stepKeysControl(double t, double dt)
{
    // Авт. набор
    if (getKeyState(KEY_Q))
    {
        k21 = true;
        k22 = true;
        k23 = true;
    }
    // 1 вверх
    if (getKeyState(KEY_E))
    {
        k21 = false;
        k22 = true;
        k23 = true;
    }
    else
    {
        k21 = true;
        k22 = true;
        k23 = false;
    }
    // 1 вниз
    if (getKeyState(KEY_A))
    {
        k21 = false;
        k22 = false;
        k23 = false;
    }

    // Авт. сброс
    if (getKeyState(KEY_D))
    {
        k21 = true;
        k22 = false;
        k23 = false;
    }
    // Ноль
    if (getKeyState(KEY_Z))
    {
        k21 = true;
        k22 = true;
        k23 = false;
    }


    controlState.up = k21 * k23;
    controlState.up1 = !k21 * k23;
    controlState.zero = k22 * !k23;
    controlState.down1 = !k21 * !k22;
    controlState.down = k21 * !k22;

}
